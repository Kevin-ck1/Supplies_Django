# Requirements

Before starting up the project, some modules/library/applications are required. Note that the application was developed and tested using a windows machine, hence the below listed requirements are tailored to a *windows machine*.

* **python** - the latest version of python is required, as of the writing of this the version used in the application is `Python 3.10.5`. 

* **pip** - As of of writing the version of pip used is `pip-22.2.2`. To ensure the latest version is installed `python -m pip install --upgrade pip`

* **Polymophic** - It simplifies using inherited models in Django. To install the module on the console run `pip install django-polymorphic`. We follow-up by adding the `polymorphic` key word into the `INSTALLED_APPS`, in the `settings.py` file in the root directory of the project.

  ```python
  INSTALLED_APPS = [
      'company',
      'polymorphic',
      'django.contrib.admin',
      'django.contrib.auth',
      'django.contrib.contenttypes',
      'django.contrib.sessions',
      'django.contrib.messages',
      'django.contrib.staticfiles',
  ]
  ```



* **pandas** - Its a data analysis and manipulation tool. To install it on the console run `pip install pandas`

* **openpyxl** - It is a library to read or write excel files. To ensure functioning of pandas in extracting data from external excel file, ensure that the latest version of *openpyxl* is used. Run `pip install openpyxl`.

* **xlsxwriter** - It is module used in the writing of worksheets in the format *.xlsx*. To install the latest module in the console run `pip install XlsxWriter`

* **PyPDF2** - It is a pdf library used in the project for merging of pdf files. To install it, run `pip install PyPDF2`. Also to use the library ensure that **typing_extensions** are up to date, we do so by running `python -m pip install typing-extensions --upgrade`.

* **WeasyPrint** -  It used to turn HTML pages into pdf. To make weasyprint run on a windows machine.

  * Ensure latest python is installed

  * Download and install latest version of **GTKS installer** -  https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases

  * On the console run `python -m pip install weasyprint`

    For detailed instruction of *WeasyPrint*  installation visit https://doc.courtbouillon.org/weasyprint/stable/first_steps.html

* **App passwords** - It is a 16-digit passcode that gives a less secure app or device permission to access your Google Account. In this case it is used to grant Django the access of a gmail email account. To set up check https://support.google.com/accounts/answer/185833?hl=en

  The *gmail* together with the *app password* are then feed-in to the *settings.py* file. The *gmail* as the `EMAIL_HOST_USER` and the *password* as the `EMAIL_HOST_PASSWORD`. An example of the Gmail_Email settings is as shown below:

  ```python
  EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
  EMAIL_HOST = 'smtp.gmail.com'
  EMAIL_PORT = 587
  EMAIL_HOST_USER = 'kevin.dev254@gmail.com'
  EMAIL_HOST_PASSWORD = '16_digit passcode goes here'
  EMAIL_USE_TLS = True
  EMAIL_USE_SSL = False
  ```

  **Note** - For the purpose of submitting this project, using the above(i.e using google sever to send mail) is not used. But the code is available in the *settings.py* file, it is just commented out. To use it, uncomment the bit of code and use a *gmail* account with *app password* the as the `EMAIL_HOST_USER` and the *password* as the `EMAIL_HOST_PASSWORD`.  While uncommenting the code, comment the section for `# Email Settings - local host` , which contains code that sends the mail through the local sever host.

# Running the Application

With all the requirements properly installed, run the below commands simultaneously in two separate consoles. 

* `python manage.py runserver` - This opens a server an provides a link to that leads to the displayed app.
* `python -m smtpd -n -c DebuggingServer localhost:1025` - Opens up server for the sending of the attached email.

Note that the above commands are for running the app in development mode in a *windows machine*.